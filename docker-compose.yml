services:
  postgres:
      image: postgres:16
      container_name: postgres_iot
      restart: always
      environment:
        POSTGRES_USER: iotuser
        POSTGRES_PASSWORD: iotpassword
        POSTGRES_DB: iotdb
      ports:
        - "5432:5432"
      volumes:
        - postgres_data:/var/lib/postgresql/data
        - ./init-db:/docker-entrypoint-initdb.d
  influxdb:
    image: influxdb:2.7
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin123
      - DOCKER_INFLUXDB_INIT_ORG=mi-org
      - DOCKER_INFLUXDB_INIT_BUCKET=mi-bucket
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=supersecreto

  mosquitto:
    image: eclipse-mosquitto:2.0
    ports:
      - "1883:1883" # MQTT est√°ndar
      - "9001:9001" # MQTT sobre WebSocket (opcional)
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log

  backend:
    build: ./backend
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    depends_on:
      - influxdb
      - mosquitto
    command: npx nodemon index.js

  frontend:
    build:
      context: ./frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm run dev
    depends_on:
      - backend

volumes:
  influxdb_data:
  postgres_data:

  

